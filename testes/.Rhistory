View(sa1)
summary(sa1)
size = sa1$padrao + sa1$texto
plot(sa1$ruusage ~ size , xlab = 'Entrada', ylab = 'Tempo (microsegundos)')
install.packages("ggplot2")
library(ggplot2)
ggplot(carros, aes(size, bmh1$gettimeofday)) +
geom_point()
ggplot(bmh1, aes(size, bmh1$gettimeofday)) +
geom_point()
ggplot(bmh1, aes(size, bmh1$gettimeofday)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(bmh1, aes(size, gettimeofday)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(bmh1, aes(size, ruusage)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(bmh1, aes(size, sistema)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(bmh1) +
geom_point(mapping = aes(x = size, y = gettimeofday))
ggplot(bmh1) +
geom_point(mapping = aes(x = size, y = gettimeofday))+
geom_abline(intercept = 0, slope = 1, color = "red")
bmh1 %>%
group_by(size) %>%
summarise(tempo_medio = mean(gettimeofday, na.rm = TRUE)) %>%
ggplot() +
geom_line(aes(x = size, y = tempo_medio))
ggplot(bmh1, aes(size, gettimeofday)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(fb1, aes(size, gettimeofday)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(sa1, aes(size, gettimeofday)) +
geom_point() +
geom_smooth(method = "lm")
#------Teste 1-------
geral <- read.csv("randomData.csv", header = TRUE,
sep = ";",
dec = ".")
View(geral)
summary(geral)
size = geral$padrao + geral$texto
ggplot(geral, aes(size, gettimeofday)) +
geom_point() +
geom_smooth(method = "lm")
plot(geral$ruusage ~ size , xlab = 'Entrada', ylab = 'Tempo (microsegundos)')
ggplot(geral, aes(x = size,
y = gettimeofday,
color = solucao)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(x = size,
y = ruusage,
color = solucao)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(x = size,
y = usuario,
color = solucao)) +
geom_point() +
geom_smooth(method = "lm")
#------Teste 1-------
geral <- read.csv("randomData.csv", header = TRUE,
sep = ";",
dec = ".")
View(geral)
summary(geral)
size = geral$padrao + geral$texto
ggplot(geral, aes(size, gettimeofday)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(x = size,
y = gettimeofday,
color = solucao)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
geom_point() +
geom_smooth(method = "lm")
fb1 <- read.csv("randomData1.csv", header = TRUE,
sep = ";",
dec = ".")
View(fb1)
summary(fb1)
size = fb1$padrao + fb1$texto
ggplot(fb1, aes(size, gettimeofday)) +
geom_point() +
geom_smooth(method = "lm")
bmh1 <- read.csv("randomData2.csv", header = TRUE,
sep = ";",
dec = ".")
View(bmh1)
summary(bmh1)
size = bmh1$padrao + bmh1$texto
ggplot(bmh1, aes(size, gettimeofday)) +
geom_point() +
geom_smooth(method = "lm")
sa1 <- read.csv("randomData3.csv", header = TRUE,
sep = ";",
dec = ".")
View(sa1)
summary(sa1)
size = sa1$padrao + sa1$texto
ggplot(sa1, aes(size, gettimeofday)) +
geom_point() +
geom_smooth(method = "lm")
#------Teste 1-------
geral <- read.csv("randomData.csv", header = TRUE,
sep = ";",
dec = ".")
View(geral)
summary(geral)
size = geral$padrao + geral$texto
ggplot(geral, aes(x = size,
y = gettimeofday,
color = solucao)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
geom_point() +
geom_line(method = "lm")
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
geom_point() +
geom_function(method = "lm")
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
geom_point() +
geom_segment(method = "lm")
ggplot(geral, aes(size)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo", colour = "Soluções") +
geom_line(aes(y = BMH, colour="DRC")) +
geom_line(aes(y = Força-Bruta, colour="Algeria")) +
geom_line(aes(y = Shift-And, colour="Kenya"))
#------Teste 1-------
geral <- read.csv("randomData.csv", header = TRUE,
sep = ";",
dec = ".")
View(geral)
summary(geral)
size = geral$padrao + geral$texto
ggplot(geral, aes(x = size,
y = gettimeofday,
color = solucao)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(size)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo", colour = "Soluções") +
geom_line(aes(y = BMH, colour="DRC")) +
geom_line(aes(y = Força-Bruta, colour="Algeria")) +
geom_line(aes(y = Shift-And, colour="Kenya"))
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_errorbar(method = "lm")
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_errorbar(ymin = 1, ymax = 100000)
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_spoke(ymin = 1, ymax = 100000)
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_spoke(angle = 1, radius = 5)
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_spoke(angle = 1, radius = 10000000)
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_spoke(angle = 1, radius = 3500)
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_segment(angle = 1, radius = 3500)
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_segment(xend = 11000, yend = 3500)
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_smooth(method = "lm")
#create regression plot with customized style
ggplot(geral,aes(x = size, y = sistema)) +
geom_point() +
geom_smooth(method='lm', se=FALSE, color='turquoise4') +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#create regression plot with customized style
ggplot(geral,aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#create regression plot with customized style
df[which(df$prop>0),]
ggplot(geral[which(geral$sistema>0)],aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#create regression plot with customized style
ggplot(geral[which(geral$sistema>0)],aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#create regression plot with customized style
ggplot(geral[which(geral$sistema>0),],aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
sis = geral$sistema > 0
sis = geral[which(geral$sistema > 0)]
sis = geral[which(geral$sistema > 0)]$sistema
sis = geral$sistema[which(geral$sistema > 0)]
#create regression plot with customized style
ggplot(geral,aes(x = size, y = sis, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
sis = geral[which(geral$sistema > 0)]
#create regression plot with customized style
ggplot(geral[which(geral$sistema > 0)],aes(x = size, y = sis, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#create regression plot with customized style
ggplot(geral[which(geral$sistema > 0)],aes(x = texto + padrao, y = sis, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
fb1 <- read.csv("randomData1.csv", header = TRUE,
sep = ";",
dec = ".")
sis = geral$sistema[which(geral$sistema > 0)]
size = (geral$texto + geral$padrao)[which(geral$sistema > 0)]
#create regression plot with customized style
ggplot(geral[which(geral$sistema > 0)],aes(x = size, y = sis, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#create regression plot with customized style
ggplot(geral,aes(x = size, y = sis, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#create regression plot with customized style
ggplot(geral[1:115],aes(x = size, y = sis, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#create regression plot with customized style
ggplot(aes(x = size, y = sis, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#create regression plot with customized style
ggplot(sis, aes(x = size, y = sis, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
geral = geral[which(geral$sistema > 0)]
geral2 = geral[which(geral$sistema > 0)]
#create regression plot with customized style
ggplot(geral,aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
summary(geral)
#create regression plot with customized style
ggplot(geral,aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#------Teste 1-------
geral <- read.csv("randomData.csv", header = TRUE,
sep = ";",
dec = ".")
View(geral)
summary(geral)
size = geral$padrao + geral$texto
ggplot(geral, aes(x = size,
y = gettimeofday,
color = solucao)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(x = size,
y = sistema,
color = solucao)) +
ggtitle("Geral") +
labs(x = "Entrada", y = "Tempo (Microssegundos)", colour = "Soluções") +
geom_point() +
geom_smooth(method = "lm")
#create regression plot with customized style
ggplot(geral,aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
ggplot(geral[which(geral$sistema>0),], aes(size, sistema)) +
geom_bar(aes(fill=sistema, stat="identity")) +
facet_grid( ~ sistema, scales="free_x") +
theme_bw()
library(dplyr)
install.packages(dplyer)
install.packages(dplyr)
install(dplyr)
install.packages("dplyr")
library(dplyr)
geral %>%  filter(sistema > 0)
size = geral$padrao + geral$texto
#create regression plot with customized style
ggplot(geral,aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
#create regression plot with customized style
ggplot(geral %>%  filter(sistema > 0),aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
size = (geral$padrao + geral$texto)[which(geral$sistema > 0)]
#create regression plot with customized style
ggplot(geral %>%  filter(sistema > 0),aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
size = (geral$padrao + geral$texto)[which(geral$sistema > 0)]
#create regression plot with customized style
ggplot(geral %>%  filter(sistema > 0),aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (Microssegundos)', colour = "Soluções", title='Geral') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
library(dplyr)
library(ggplot2)
#------Teste 1-------
geral <- read.csv("randomData.csv", header = TRUE,
sep = ";",
dec = ".")
View(geral)
summary(geral)
size = geral$padrao + geral$texto
ggplot(geral, aes(x = size,
y = gettimeofday,
color = solucao)) +
theme_minimal() +
labs(x='Entrada', y='Tempo (microssegundos)', colour = "Soluções", title='Comparando as soluções usando "gettimeofday"') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
ggplot(geral, aes(x = size,
y = gettimeofday,
color = solucao)) +
theme_minimal() +
labs(x='Entrada', y='Tempo (microssegundos)', colour = "Soluções", title='Comparando as soluções usando "gettimeofday"') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold')) +
geom_point() +
geom_smooth(method = "lm")
ggplot(geral, aes(x = size,
y = gettimeofday,
color = solucao)) +
theme_minimal() +
labs(x='Entrada', y='Tempo (microssegundos)', colour = "Soluções", title='Usando "gettimeofday"') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold')) +
geom_point() +
geom_smooth(method = "lm", se=FALSE)
size = (geral$padrao + geral$texto)[which(geral$sistema > 0)]
#create regression plot with customized style
ggplot(geral %>%  filter(sistema > 0),aes(x = size, y = sistema, color = solucao)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
theme_minimal() +
labs(x='Entrada', y='Tempo (microssegundos)', colour = "Soluções", title='Usando "ru_stime"') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold'))
fb1 <- read.csv("randomData1.csv", header = TRUE,
sep = ";",
dec = ".")
View(fb1)
summary(fb1)
size = fb1$padrao + fb1$texto
summary(fb1)
size = fb1$padrao + fb1$texto
ggplot(fb1, aes(x = size,
y = gettimeofday)) +
theme_minimal() +
labs(x='Entrada', y='Tempo (microssegundos)', colour = "Soluções", title='Força Bruta usando "gettimeofday"') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold')) +
geom_point() +
geom_smooth(method = "lm")
bmh1 <- read.csv("randomData2.csv", header = TRUE,
sep = ";",
dec = ".")
View(bmh1)
summary(bmh1)
size = bmh1$padrao + bmh1$texto
ggplot(bmh1, aes(x = size,
y = gettimeofday)) +
theme_minimal() +
labs(x='Entrada', y='Tempo (microssegundos)', colour = "Soluções", title='BMH usando "gettimeofday"') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold')) +
geom_point() +
geom_smooth(method = "lm")
sa1 <- read.csv("randomData3.csv", header = TRUE,
sep = ";",
dec = ".")
View(sa1)
summary(sa1)
size = sa1$padrao + sa1$texto
ggplot(sa1, aes(x = size,
y = gettimeofday)) +
theme_minimal() +
labs(x='Entrada', y='Tempo (microssegundos)', colour = "Soluções", title='Shift-And usando "gettimeofday"') +
theme(plot.title = element_text(hjust=0.5, size=20, face='bold')) +
geom_point() +
geom_smooth(method = "lm")
